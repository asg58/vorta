version: '3.8'

services:
  # Redis voor caching en session management - ULTRA PROFESSIONAL
  redis:
    image: redis:7-alpine
    container_name: vorta-ultra-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - vorta-ultra-network

  # PostgreSQL voor metadata en gebruikersdata - ENTERPRISE GRADE
  postgres:
    image: postgres:15-alpine
    container_name: vorta-ultra-postgres
    environment:
      POSTGRES_DB: vorta_ultra
      POSTGRES_USER: vorta_admin
      POSTGRES_PASSWORD: VortaUltra2024Secure
      POSTGRES_INITDB_ARGS: '--auth-host=scram-sha-256'
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgresql/init-db.sql:/docker-entrypoint-initdb.d/01-init-db.sql:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U vorta_admin -d vorta_ultra']
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped
    networks:
      - vorta-ultra-network

  # Prometheus voor monitoring - ULTRA PROFESSIONAL
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: vorta-ultra-prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    healthcheck:
      test:
        ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:9090/-/healthy']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - vorta-ultra-network

  # Grafana voor dashboards - ENTERPRISE VISUALIZATION
  grafana:
    image: grafana/grafana:10.2.0
    container_name: vorta-ultra-grafana
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=VortaUltraAdmin2024
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
      - GF_ANALYTICS_REPORTING_ENABLED=false
    volumes:
      - grafana_data:/var/lib/grafana
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3000/api/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - vorta-ultra-network
    depends_on:
      - prometheus

networks:
  vorta-ultra-network:
    driver: bridge
    name: vorta-ultra-network

volumes:
  redis_data:
    name: vorta-ultra-redis-data
  postgres_data:
    name: vorta-ultra-postgres-data
  prometheus_data:
    name: vorta-ultra-prometheus-data
  grafana_data:
    name: vorta-ultra-grafana-data
